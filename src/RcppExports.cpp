// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// sparseRegressionCPP
NumericVector sparseRegressionCPP(NumericMatrix cMatrix, NumericVector constant, NumericVector bvec, NumericVector xyvec, double penalty, int p, double tol);
RcppExport SEXP _hw4_sparseRegressionCPP(SEXP cMatrixSEXP, SEXP constantSEXP, SEXP bvecSEXP, SEXP xyvecSEXP, SEXP penaltySEXP, SEXP pSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type cMatrix(cMatrixSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type constant(constantSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type bvec(bvecSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xyvec(xyvecSEXP);
    Rcpp::traits::input_parameter< double >::type penalty(penaltySEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(sparseRegressionCPP(cMatrix, constant, bvec, xyvec, penalty, p, tol));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_hw4_sparseRegressionCPP", (DL_FUNC) &_hw4_sparseRegressionCPP, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_hw4(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
